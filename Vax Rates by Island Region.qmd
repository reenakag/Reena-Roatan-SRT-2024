---
title: "Vax Rates by Island Region"
format: html
---

```{r}
# trying to join vaccine_final with Qual_Island_Region
# new_tibble has: should, status, match, group, age, gender

Qual_island_region <- Qual_island_region |>
  mutate(grupo = str_extract(group_no, "[A-Z]+")) |>
  mutate(survey_number_non_decimal = as.integer(gsub("[^0-9]", "", group_no)))

new_tibble <- new_tibble |>
  mutate(grupo = str_extract(group, "[A-Z]+")) |>
  mutate(survey_number_decimal = as.numeric(str_extract(group, "[0-9.]+"))) |>
  mutate(survey_number_non_decimal = trunc(survey_number_decimal))

vax_rate_joins_island_region <- left_join(new_tibble, Qual_island_region, by = c("grupo", "survey_number_non_decimal"))


```

```{r}
vax_rate_joins_island_region <- vax_rate_joins_island_region |>
  mutate(age_in_days = survey_date - dob) |>
  mutate(age_in_years = as.numeric(age_in_days) / 365.25) |>
  mutate(age_rounded = round(age_in_years, 1))


vax_rate_joins_island_region <- vax_rate_joins_island_region |>
  mutate(desired_vax_score = if_else(age_rounded < 0.2, 2, 
                              if_else(age_rounded >= 0.2 & age_rounded < 0.3, 6,
                               if_else(age_rounded >= 0.3 & age_rounded < 0.5, 10,
                                if_else(age_rounded >= 0.5 & age_rounded < 1.0, 13, 
                                 if_else(age_rounded >= 1.0 & age_rounded < 1.5, 15,
                                  if_else(age_rounded >= 1.5 & age_rounded < 4, 18,
                                   if_else(age_rounded >= 4 & age_rounded < 11, 19,
                                    if_else(age_rounded >= 11 & gender == "M", 20,
                                     if_else(age_rounded >= 11 & gender == "F", 21, 0))))))))))

```



```{r}

vax_rate_joins_island_region <- vax_rate_joins_island_region |>
  mutate(hep_b_should = if_else(age_rounded > 0, "YES", "NO")) |>
  mutate(hep_b_match = if_else(hep_b_status == hep_b_should & hep_b_status == "YES", "YES", "NO")) |>
  mutate(bcg_should = if_else(age_rounded > 0, "YES", "NO")) |>
  mutate(bcg_match = if_else(bcg_status == bcg_should & bcg_status == "YES", "YES", "NO")) |>
  mutate(polio_vpi1_should = if_else(age_rounded >= 0.2, "YES", "NO")) |>
  mutate(polio_vpi1_match = if_else(polio_vpi1_status == polio_vpi1_should & polio_vpi1_status == "YES", "YES", "NO")) |>
  mutate(polio_vpi2_should = if_else(age_rounded >= 0.3, "YES", "NO")) |>
  mutate(polio_vpi2_match = if_else(polio_vpi2_status == polio_vpi2_should & polio_vpi2_status == "YES", "YES", "NO")) |>
  mutate(polio_vop1_should = if_else(age_rounded >= 0.5, "YES", "NO")) |>
  mutate(polio_vop1_match = if_else(polio_vop1_status == polio_vop1_should & polio_vop1_status == "YES", "YES", "NO")) |>
  mutate(polio_vop2_should = if_else(age_rounded >= 1.5, "YES", "NO")) |>
  mutate(polio_vop2_match = if_else(polio_vop2_status == polio_vop2_should & polio_vop2_status == "YES", "YES", "NO")) |>
  mutate(penta1_should = if_else(age_rounded >= 0.2, "YES", "NO")) |>
  mutate(penta1_match = if_else(penta1_status == penta1_should & penta1_status == "YES", "YES", "NO")) |>
  mutate(penta2_should = if_else(age_rounded >= 0.3, "YES", "NO")) |>
  mutate(penta2_match = if_else(penta2_status == penta2_should & penta2_status == "YES", "YES", "NO")) |>
  mutate(penta3_should = if_else(age_rounded >= 0.5, "YES", "NO")) |>
  mutate(penta3_match = if_else(penta3_status == penta3_should & penta3_status == "YES", "YES", "NO")) |>
  mutate(neumo1_should = if_else(age_rounded >= 0.2, "YES", "NO")) |>
  mutate(neumo1_match = if_else(neumo1_status == neumo1_should & neumo1_status == "YES", "YES", "NO")) |>
  mutate(neumo2_should = if_else(age_rounded >= 0.3, "YES", "NO")) |>
  mutate(neumo2_match = if_else(neumo2_status == neumo2_should & neumo2_status == "YES", "YES", "NO")) |>
  mutate(neumo3_should = if_else(age_rounded >= 0.5, "YES", "NO")) |>
  mutate(neumo3_match = if_else(neumo3_status == neumo3_should & neumo3_status == "YES", "YES", "NO")) |>
  mutate(rota1_should = if_else(age_rounded >= 0.2, "YES", "NO")) |>
  mutate(rota1_match = if_else(rota1_status == rota1_should & rota1_status == "YES", "YES", "NO")) |>
  mutate(rota2_should = if_else(age_rounded >= 0.3, "YES", "NO")) |>
  mutate(rota2_match = if_else(rota2_status == rota2_should & rota2_status == "YES", "YES", "NO")) |>
  mutate(srp1_should = if_else(age_rounded >= 1.0, "YES", "NO")) |>
  mutate(srp1_match = if_else(srp1_status == srp1_should & srp1_status == "YES", "YES", "NO")) |>
  mutate(srp2_should = if_else(age_rounded >= 1.5, "YES", "NO")) |>
  mutate(srp2_match = if_else(srp2_status == srp2_should & srp2_status == "YES", "YES", "NO")) |>
  mutate(hep_a_should = if_else(age_rounded >= 1.0, "YES", "NO")) |>
  mutate(hep_a_match = if_else(hep_a_status == hep_a_should & hep_a_status == "YES", "YES", "NO")) |>
  mutate(dpt1_should = if_else(age_rounded >= 1.5, "YES", "NO")) |>
  mutate(dpt1_match = if_else(dpt1_status == dpt1_should & dpt1_status == "YES", "YES", "NO")) |>
  mutate(dpt2_should = if_else(age_rounded >= 4, "YES", "NO")) |>
  mutate(dpt2_match = if_else(dpt2_status == dpt2_should & dpt2_status == "YES", "YES", "NO")) |>
  mutate(vph_1_should = if_else(age_rounded >= 11  & child_gender == "F", "YES", "NO")) |>
  mutate(vph_1_match = if_else(vph_1_status == vph_1_should & vph_1_status == "YES", "YES", "NO")) |>
  mutate(tetanus_dip_should = if_else(age_rounded >= 11, "YES", "NO")) |>
  mutate(tetanus_dip_match = if_else(tetanus_dip_status == tetanus_dip_should & tetanus_dip_status == "YES", "YES", "NO"))

```


```{r}
#| label: each-vax-adherence-calcs-for-region1

r1_tibble <- vax_rate_joins_island_region |>
  filter(island_region == 1)

###### Hep B ######
match_tibble <- r1_tibble |>
  count(hep_b_match)

num_yes_match <- match_tibble |>
  filter(hep_b_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(hep_b_should)

num_yes_should <- should_tibble |>
  filter(hep_b_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_b_percent_adherence = num_yes_match / num_yes_should
print(hep_b_percent_adherence)

######  BCG  #########

match_tibble <- r1_tibble |>
  count(bcg_match)

num_yes_match <- match_tibble |>
  filter(bcg_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(bcg_should)

num_yes_should <- should_tibble |>
  filter(bcg_should == "YES") |>
  pull(n)
print(num_yes_should)

bcg_percent_adherence = num_yes_match / num_yes_should
print(bcg_percent_adherence)

###### Polio VPI 1 #########

match_tibble <- r1_tibble |>
  count(polio_vpi1_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(polio_vpi1_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi1_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi1_percent_adherence)

###### Polio VPI 2 #########

match_tibble <- r1_tibble |>
  count(polio_vpi2_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(polio_vpi2_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi2_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi2_percent_adherence)

###### Polio VOP 1 #########

match_tibble <- r1_tibble |>
  count(polio_vop1_match)

num_yes_match <- match_tibble |>
  filter(polio_vop1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(polio_vop1_should)

num_yes_should <- should_tibble |>
  filter(polio_vop1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop1_percent_adherence = num_yes_match / num_yes_should
print(polio_vop1_percent_adherence)

###### Polio VOP 2 #########

match_tibble <- r1_tibble |>
  count(polio_vop2_match)

num_yes_match <- match_tibble |>
  filter(polio_vop2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(polio_vop2_should)

num_yes_should <- should_tibble |>
  filter(polio_vop2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop2_percent_adherence = num_yes_match / num_yes_should
print(polio_vop2_percent_adherence)
###### Penta 1 #########

match_tibble <- r1_tibble |>
  count(penta1_match)

num_yes_match <- match_tibble |>
  filter(penta1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(penta1_should)

num_yes_should <- should_tibble |>
  filter(penta1_should == "YES") |>
  pull(n)
print(num_yes_should)

penta1_percent_adherence = num_yes_match / num_yes_should
print(penta1_percent_adherence)

###### Penta 2 #########

match_tibble <- r1_tibble |>
  count(penta2_match)

num_yes_match <- match_tibble |>
  filter(penta2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(penta2_should)

num_yes_should <- should_tibble |>
  filter(penta2_should == "YES") |>
  pull(n)
print(num_yes_should)

penta2_percent_adherence = num_yes_match / num_yes_should
print(penta2_percent_adherence)

###### Penta 3 #########

match_tibble <- r1_tibble |>
  count(penta3_match)

num_yes_match <- match_tibble |>
  filter(penta3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(penta3_should)

num_yes_should <- should_tibble |>
  filter(penta3_should == "YES") |>
  pull(n)
print(num_yes_should)

penta3_percent_adherence = num_yes_match / num_yes_should
print(penta3_percent_adherence) ##we should double check this one because why is it at 100%-

###### Neumo 1 #########

match_tibble <- r1_tibble |>
  count(neumo1_match)

num_yes_match <- match_tibble |>
  filter(neumo1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(neumo1_should)

num_yes_should <- should_tibble |>
  filter(neumo1_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo1_percent_adherence = num_yes_match / num_yes_should
print(neumo1_percent_adherence)

###### Neumo 2 #########

match_tibble <- r1_tibble |>
  count(neumo2_match)

num_yes_match <- match_tibble |>
  filter(neumo2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(neumo2_should)

num_yes_should <- should_tibble |>
  filter(neumo2_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo2_percent_adherence = num_yes_match / num_yes_should
print(neumo2_percent_adherence)

###### Neumo 3 #########

match_tibble <- r1_tibble |>
  count(neumo3_match)

num_yes_match <- match_tibble |>
  filter(neumo3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(neumo3_should)

num_yes_should <- should_tibble |>
  filter(neumo3_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo3_percent_adherence = num_yes_match / num_yes_should
print(neumo3_percent_adherence)

###### Rota 1 #########

match_tibble <- r1_tibble |>
  count(rota1_match)

num_yes_match <- match_tibble |>
  filter(rota1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(rota1_should)

num_yes_should <- should_tibble |>
  filter(rota1_should == "YES") |>
  pull(n)
print(num_yes_should)

rota1_percent_adherence = num_yes_match / num_yes_should
print(rota1_percent_adherence)

###### Rota 2 #########

match_tibble <- r1_tibble |>
  count(rota2_match)

num_yes_match <- match_tibble |>
  filter(rota2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(rota2_should)

num_yes_should <- should_tibble |>
  filter(rota2_should == "YES") |>
  pull(n)
print(num_yes_should)

rota2_percent_adherence = num_yes_match / num_yes_should
print(rota2_percent_adherence)

###### SRP 1 #########

match_tibble <- r1_tibble |>
  count(srp1_match)

num_yes_match <- match_tibble |>
  filter(srp1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(srp1_should)

num_yes_should <- should_tibble |>
  filter(srp1_should == "YES") |>
  pull(n)
print(num_yes_should)

srp1_percent_adherence = num_yes_match / num_yes_should
print(srp1_percent_adherence)

###### SRP 2 #########

match_tibble <- r1_tibble |>
  count(srp2_match)

num_yes_match <- match_tibble |>
  filter(srp2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(srp2_should)

num_yes_should <- should_tibble |>
  filter(srp2_should == "YES") |>
  pull(n)
print(num_yes_should)

srp2_percent_adherence = num_yes_match / num_yes_should
print(srp2_percent_adherence)

###### Hep A #########

match_tibble <- r1_tibble |>
  count(hep_a_match)

num_yes_match <- match_tibble |>
  filter(hep_a_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(hep_a_should)

num_yes_should <- should_tibble |>
  filter(hep_a_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_a_percent_adherence = num_yes_match / num_yes_should
print(hep_a_percent_adherence)

###### DPT 1 #########

match_tibble <- r1_tibble |>
  count(dpt1_match)

num_yes_match <- match_tibble |>
  filter(dpt1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(dpt1_should)

num_yes_should <- should_tibble |>
  filter(dpt1_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt1_percent_adherence = num_yes_match / num_yes_should
print(dpt1_percent_adherence)

###### DPT 2 #########

match_tibble <- r1_tibble |>
  count(dpt2_match)

num_yes_match <- match_tibble |>
  filter(dpt2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(dpt2_should)

num_yes_should <- should_tibble |>
  filter(dpt2_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt2_percent_adherence = num_yes_match / num_yes_should
print(dpt2_percent_adherence)

###### VPH 1 #########

match_tibble <- r1_tibble |>
  count(vph_1_match)

num_yes_match <- match_tibble |>
  filter(vph_1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(vph_1_should)

num_yes_should <- should_tibble |>
  filter(vph_1_should == "YES") |>
  pull(n)
print(num_yes_should)

vph_1_percent_adherence = num_yes_match / num_yes_should
print(vph_1_percent_adherence)

###### Tetanus Diptheria #########

match_tibble <- r1_tibble |>
  count(tetanus_dip_match)

num_yes_match <- match_tibble |>
  filter(tetanus_dip_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r1_tibble |>
  count(tetanus_dip_should)

num_yes_should <- should_tibble |>
  filter(tetanus_dip_should == "YES") |>
  pull(n)
print(num_yes_should)

tetanus_dip_percent_adherence = num_yes_match / num_yes_should
print(tetanus_dip_percent_adherence)
```

```{r}
#| label: each-vax-adherence-calcs-for-region2

r2_tibble <- vax_rate_joins_island_region |>
  filter(island_region == 2)

###### Hep B ######
match_tibble <- r2_tibble |>
  count(hep_b_match)

num_yes_match <- match_tibble |>
  filter(hep_b_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(hep_b_should)

num_yes_should <- should_tibble |>
  filter(hep_b_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_b_percent_adherence = num_yes_match / num_yes_should
print(hep_b_percent_adherence)

######  BCG  #########

match_tibble <- r2_tibble |>
  count(bcg_match)

num_yes_match <- match_tibble |>
  filter(bcg_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(bcg_should)

num_yes_should <- should_tibble |>
  filter(bcg_should == "YES") |>
  pull(n)
print(num_yes_should)

bcg_percent_adherence = num_yes_match / num_yes_should
print(bcg_percent_adherence)

###### Polio VPI 1 #########

match_tibble <- r2_tibble |>
  count(polio_vpi1_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(polio_vpi1_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi1_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi1_percent_adherence)

###### Polio VPI 2 #########

match_tibble <- r2_tibble |>
  count(polio_vpi2_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(polio_vpi2_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi2_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi2_percent_adherence)

###### Polio VOP 1 #########

match_tibble <- r2_tibble |>
  count(polio_vop1_match)

num_yes_match <- match_tibble |>
  filter(polio_vop1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(polio_vop1_should)

num_yes_should <- should_tibble |>
  filter(polio_vop1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop1_percent_adherence = num_yes_match / num_yes_should
print(polio_vop1_percent_adherence)

###### Polio VOP 2 #########

match_tibble <- r2_tibble |>
  count(polio_vop2_match)

num_yes_match <- match_tibble |>
  filter(polio_vop2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(polio_vop2_should)

num_yes_should <- should_tibble |>
  filter(polio_vop2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop2_percent_adherence = num_yes_match / num_yes_should
print(polio_vop2_percent_adherence)
###### Penta 1 #########

match_tibble <- r2_tibble |>
  count(penta1_match)

num_yes_match <- match_tibble |>
  filter(penta1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(penta1_should)

num_yes_should <- should_tibble |>
  filter(penta1_should == "YES") |>
  pull(n)
print(num_yes_should)

penta1_percent_adherence = num_yes_match / num_yes_should
print(penta1_percent_adherence)

###### Penta 2 #########

match_tibble <- r2_tibble |>
  count(penta2_match)

num_yes_match <- match_tibble |>
  filter(penta2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(penta2_should)

num_yes_should <- should_tibble |>
  filter(penta2_should == "YES") |>
  pull(n)
print(num_yes_should)

penta2_percent_adherence = num_yes_match / num_yes_should
print(penta2_percent_adherence)

###### Penta 3 #########

match_tibble <- r2_tibble |>
  count(penta3_match)

num_yes_match <- match_tibble |>
  filter(penta3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(penta3_should)

num_yes_should <- should_tibble |>
  filter(penta3_should == "YES") |>
  pull(n)
print(num_yes_should)

penta3_percent_adherence = num_yes_match / num_yes_should
print(penta3_percent_adherence) ##we should double check this one because why is it at 100%-

###### Neumo 1 #########

match_tibble <- r2_tibble |>
  count(neumo1_match)

num_yes_match <- match_tibble |>
  filter(neumo1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(neumo1_should)

num_yes_should <- should_tibble |>
  filter(neumo1_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo1_percent_adherence = num_yes_match / num_yes_should
print(neumo1_percent_adherence)

###### Neumo 2 #########

match_tibble <- r2_tibble |>
  count(neumo2_match)

num_yes_match <- match_tibble |>
  filter(neumo2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(neumo2_should)

num_yes_should <- should_tibble |>
  filter(neumo2_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo2_percent_adherence = num_yes_match / num_yes_should
print(neumo2_percent_adherence)

###### Neumo 3 #########

match_tibble <- r2_tibble |>
  count(neumo3_match)

num_yes_match <- match_tibble |>
  filter(neumo3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(neumo3_should)

num_yes_should <- should_tibble |>
  filter(neumo3_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo3_percent_adherence = num_yes_match / num_yes_should
print(neumo3_percent_adherence)

###### Rota 1 #########

match_tibble <- r2_tibble |>
  count(rota1_match)

num_yes_match <- match_tibble |>
  filter(rota1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(rota1_should)

num_yes_should <- should_tibble |>
  filter(rota1_should == "YES") |>
  pull(n)
print(num_yes_should)

rota1_percent_adherence = num_yes_match / num_yes_should
print(rota1_percent_adherence)

###### Rota 2 #########

match_tibble <- r2_tibble |>
  count(rota2_match)

num_yes_match <- match_tibble |>
  filter(rota2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(rota2_should)

num_yes_should <- should_tibble |>
  filter(rota2_should == "YES") |>
  pull(n)
print(num_yes_should)

rota2_percent_adherence = num_yes_match / num_yes_should
print(rota2_percent_adherence)

###### SRP 1 #########

match_tibble <- r2_tibble |>
  count(srp1_match)

num_yes_match <- match_tibble |>
  filter(srp1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(srp1_should)

num_yes_should <- should_tibble |>
  filter(srp1_should == "YES") |>
  pull(n)
print(num_yes_should)

srp1_percent_adherence = num_yes_match / num_yes_should
print(srp1_percent_adherence)

###### SRP 2 #########

match_tibble <- r2_tibble |>
  count(srp2_match)

num_yes_match <- match_tibble |>
  filter(srp2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(srp2_should)

num_yes_should <- should_tibble |>
  filter(srp2_should == "YES") |>
  pull(n)
print(num_yes_should)

srp2_percent_adherence = num_yes_match / num_yes_should
print(srp2_percent_adherence)

###### Hep A #########

match_tibble <- r2_tibble |>
  count(hep_a_match)

num_yes_match <- match_tibble |>
  filter(hep_a_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(hep_a_should)

num_yes_should <- should_tibble |>
  filter(hep_a_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_a_percent_adherence = num_yes_match / num_yes_should
print(hep_a_percent_adherence)

###### DPT 1 #########

match_tibble <- r2_tibble |>
  count(dpt1_match)

num_yes_match <- match_tibble |>
  filter(dpt1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(dpt1_should)

num_yes_should <- should_tibble |>
  filter(dpt1_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt1_percent_adherence = num_yes_match / num_yes_should
print(dpt1_percent_adherence)

###### DPT 2 #########

match_tibble <- r2_tibble |>
  count(dpt2_match)

num_yes_match <- match_tibble |>
  filter(dpt2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(dpt2_should)

num_yes_should <- should_tibble |>
  filter(dpt2_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt2_percent_adherence = num_yes_match / num_yes_should
print(dpt2_percent_adherence)

###### VPH 1 #########

match_tibble <- r2_tibble |>
  count(vph_1_match)

num_yes_match <- match_tibble |>
  filter(vph_1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(vph_1_should)

num_yes_should <- should_tibble |>
  filter(vph_1_should == "YES") |>
  pull(n)
print(num_yes_should)

vph_1_percent_adherence = num_yes_match / num_yes_should
print(vph_1_percent_adherence)

###### Tetanus Diptheria #########

match_tibble <- r2_tibble |>
  count(tetanus_dip_match)

num_yes_match <- match_tibble |>
  filter(tetanus_dip_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r2_tibble |>
  count(tetanus_dip_should)

num_yes_should <- should_tibble |>
  filter(tetanus_dip_should == "YES") |>
  pull(n)
print(num_yes_should)

tetanus_dip_percent_adherence = num_yes_match / num_yes_should
print(tetanus_dip_percent_adherence)
```

```{r}
#| label: each-vax-adherence-calcs-for-region3

r3_tibble <- vax_rate_joins_island_region |>
  filter(island_region == 3)

###### Hep B ######
match_tibble <- r3_tibble |>
  count(hep_b_match)

num_yes_match <- match_tibble |>
  filter(hep_b_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(hep_b_should)

num_yes_should <- should_tibble |>
  filter(hep_b_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_b_percent_adherence = num_yes_match / num_yes_should
print(hep_b_percent_adherence)

######  BCG  #########

match_tibble <- r3_tibble |>
  count(bcg_match)

num_yes_match <- match_tibble |>
  filter(bcg_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(bcg_should)

num_yes_should <- should_tibble |>
  filter(bcg_should == "YES") |>
  pull(n)
print(num_yes_should)

bcg_percent_adherence = num_yes_match / num_yes_should
print(bcg_percent_adherence)

###### Polio VPI 1 #########

match_tibble <- r3_tibble |>
  count(polio_vpi1_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(polio_vpi1_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi1_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi1_percent_adherence)

###### Polio VPI 2 #########

match_tibble <- r3_tibble |>
  count(polio_vpi2_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(polio_vpi2_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi2_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi2_percent_adherence)

###### Polio VOP 1 #########

match_tibble <- r3_tibble |>
  count(polio_vop1_match)

num_yes_match <- match_tibble |>
  filter(polio_vop1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(polio_vop1_should)

num_yes_should <- should_tibble |>
  filter(polio_vop1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop1_percent_adherence = num_yes_match / num_yes_should
print(polio_vop1_percent_adherence)

###### Polio VOP 2 #########

match_tibble <- r3_tibble |>
  count(polio_vop2_match)

num_yes_match <- match_tibble |>
  filter(polio_vop2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(polio_vop2_should)

num_yes_should <- should_tibble |>
  filter(polio_vop2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop2_percent_adherence = num_yes_match / num_yes_should
print(polio_vop2_percent_adherence)
###### Penta 1 #########

match_tibble <- r3_tibble |>
  count(penta1_match)

num_yes_match <- match_tibble |>
  filter(penta1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(penta1_should)

num_yes_should <- should_tibble |>
  filter(penta1_should == "YES") |>
  pull(n)
print(num_yes_should)

penta1_percent_adherence = num_yes_match / num_yes_should
print(penta1_percent_adherence)

###### Penta 2 #########

match_tibble <- r3_tibble |>
  count(penta2_match)

num_yes_match <- match_tibble |>
  filter(penta2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(penta2_should)

num_yes_should <- should_tibble |>
  filter(penta2_should == "YES") |>
  pull(n)
print(num_yes_should)

penta2_percent_adherence = num_yes_match / num_yes_should
print(penta2_percent_adherence)

###### Penta 3 #########

match_tibble <- r3_tibble |>
  count(penta3_match)

num_yes_match <- match_tibble |>
  filter(penta3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(penta3_should)

num_yes_should <- should_tibble |>
  filter(penta3_should == "YES") |>
  pull(n)
print(num_yes_should)

penta3_percent_adherence = num_yes_match / num_yes_should
print(penta3_percent_adherence) ##we should double check this one because why is it at 100%-

###### Neumo 1 #########

match_tibble <- r3_tibble |>
  count(neumo1_match)

num_yes_match <- match_tibble |>
  filter(neumo1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(neumo1_should)

num_yes_should <- should_tibble |>
  filter(neumo1_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo1_percent_adherence = num_yes_match / num_yes_should
print(neumo1_percent_adherence)

###### Neumo 2 #########

match_tibble <- r3_tibble |>
  count(neumo2_match)

num_yes_match <- match_tibble |>
  filter(neumo2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(neumo2_should)

num_yes_should <- should_tibble |>
  filter(neumo2_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo2_percent_adherence = num_yes_match / num_yes_should
print(neumo2_percent_adherence)

###### Neumo 3 #########

match_tibble <- r3_tibble |>
  count(neumo3_match)

num_yes_match <- match_tibble |>
  filter(neumo3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(neumo3_should)

num_yes_should <- should_tibble |>
  filter(neumo3_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo3_percent_adherence = num_yes_match / num_yes_should
print(neumo3_percent_adherence)

###### Rota 1 #########

match_tibble <- r3_tibble |>
  count(rota1_match)

num_yes_match <- match_tibble |>
  filter(rota1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(rota1_should)

num_yes_should <- should_tibble |>
  filter(rota1_should == "YES") |>
  pull(n)
print(num_yes_should)

rota1_percent_adherence = num_yes_match / num_yes_should
print(rota1_percent_adherence)

###### Rota 2 #########

match_tibble <- r3_tibble |>
  count(rota2_match)

num_yes_match <- match_tibble |>
  filter(rota2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(rota2_should)

num_yes_should <- should_tibble |>
  filter(rota2_should == "YES") |>
  pull(n)
print(num_yes_should)

rota2_percent_adherence = num_yes_match / num_yes_should
print(rota2_percent_adherence)

###### SRP 1 #########

match_tibble <- r3_tibble |>
  count(srp1_match)

num_yes_match <- match_tibble |>
  filter(srp1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(srp1_should)

num_yes_should <- should_tibble |>
  filter(srp1_should == "YES") |>
  pull(n)
print(num_yes_should)

srp1_percent_adherence = num_yes_match / num_yes_should
print(srp1_percent_adherence)

###### SRP 2 #########

match_tibble <- r3_tibble |>
  count(srp2_match)

num_yes_match <- match_tibble |>
  filter(srp2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(srp2_should)

num_yes_should <- should_tibble |>
  filter(srp2_should == "YES") |>
  pull(n)
print(num_yes_should)

srp2_percent_adherence = num_yes_match / num_yes_should
print(srp2_percent_adherence)

###### Hep A #########

match_tibble <- r3_tibble |>
  count(hep_a_match)

num_yes_match <- match_tibble |>
  filter(hep_a_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(hep_a_should)

num_yes_should <- should_tibble |>
  filter(hep_a_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_a_percent_adherence = num_yes_match / num_yes_should
print(hep_a_percent_adherence)

###### DPT 1 #########

match_tibble <- r3_tibble |>
  count(dpt1_match)

num_yes_match <- match_tibble |>
  filter(dpt1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(dpt1_should)

num_yes_should <- should_tibble |>
  filter(dpt1_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt1_percent_adherence = num_yes_match / num_yes_should
print(dpt1_percent_adherence)

###### DPT 2 #########

match_tibble <- r3_tibble |>
  count(dpt2_match)

num_yes_match <- match_tibble |>
  filter(dpt2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(dpt2_should)

num_yes_should <- should_tibble |>
  filter(dpt2_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt2_percent_adherence = num_yes_match / num_yes_should
print(dpt2_percent_adherence)

###### VPH 1 #########

match_tibble <- r3_tibble |>
  count(vph_1_match)

num_yes_match <- match_tibble |>
  filter(vph_1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(vph_1_should)

num_yes_should <- should_tibble |>
  filter(vph_1_should == "YES") |>
  pull(n)
print(num_yes_should)

vph_1_percent_adherence = num_yes_match / num_yes_should
print(vph_1_percent_adherence)

###### Tetanus Diptheria #########

match_tibble <- r3_tibble |>
  count(tetanus_dip_match)

num_yes_match <- match_tibble |>
  filter(tetanus_dip_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r3_tibble |>
  count(tetanus_dip_should)

num_yes_should <- should_tibble |>
  filter(tetanus_dip_should == "YES") |>
  pull(n)
print(num_yes_should)

tetanus_dip_percent_adherence = num_yes_match / num_yes_should
print(tetanus_dip_percent_adherence)


```

```{r}
#| label: each-vax-adherence-calcs-for-region4

r4_tibble <- vax_rate_joins_island_region |>
  filter(island_region == 4)

###### Hep B ######
match_tibble <- r4_tibble |>
  count(hep_b_match)

num_yes_match <- match_tibble |>
  filter(hep_b_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(hep_b_should)

num_yes_should <- should_tibble |>
  filter(hep_b_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_b_percent_adherence = num_yes_match / num_yes_should
print(hep_b_percent_adherence)

######  BCG  #########

match_tibble <- r4_tibble |>
  count(bcg_match)

num_yes_match <- match_tibble |>
  filter(bcg_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(bcg_should)

num_yes_should <- should_tibble |>
  filter(bcg_should == "YES") |>
  pull(n)
print(num_yes_should)

bcg_percent_adherence = num_yes_match / num_yes_should
print(bcg_percent_adherence)

###### Polio VPI 1 #########

match_tibble <- r4_tibble |>
  count(polio_vpi1_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(polio_vpi1_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi1_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi1_percent_adherence)

###### Polio VPI 2 #########

match_tibble <- r4_tibble |>
  count(polio_vpi2_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(polio_vpi2_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi2_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi2_percent_adherence)

###### Polio VOP 1 #########

match_tibble <- r4_tibble |>
  count(polio_vop1_match)

num_yes_match <- match_tibble |>
  filter(polio_vop1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(polio_vop1_should)

num_yes_should <- should_tibble |>
  filter(polio_vop1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop1_percent_adherence = num_yes_match / num_yes_should
print(polio_vop1_percent_adherence)

###### Polio VOP 2 #########

match_tibble <- r4_tibble |>
  count(polio_vop2_match)

num_yes_match <- match_tibble |>
  filter(polio_vop2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(polio_vop2_should)

num_yes_should <- should_tibble |>
  filter(polio_vop2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop2_percent_adherence = num_yes_match / num_yes_should
print(polio_vop2_percent_adherence)
###### Penta 1 #########

match_tibble <- r4_tibble |>
  count(penta1_match)

num_yes_match <- match_tibble |>
  filter(penta1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(penta1_should)

num_yes_should <- should_tibble |>
  filter(penta1_should == "YES") |>
  pull(n)
print(num_yes_should)

penta1_percent_adherence = num_yes_match / num_yes_should
print(penta1_percent_adherence)

###### Penta 2 #########

match_tibble <- r4_tibble |>
  count(penta2_match)

num_yes_match <- match_tibble |>
  filter(penta2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(penta2_should)

num_yes_should <- should_tibble |>
  filter(penta2_should == "YES") |>
  pull(n)
print(num_yes_should)

penta2_percent_adherence = num_yes_match / num_yes_should
print(penta2_percent_adherence)

###### Penta 3 #########

match_tibble <- r4_tibble |>
  count(penta3_match)

num_yes_match <- match_tibble |>
  filter(penta3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(penta3_should)

num_yes_should <- should_tibble |>
  filter(penta3_should == "YES") |>
  pull(n)
print(num_yes_should)

penta3_percent_adherence = num_yes_match / num_yes_should
print(penta3_percent_adherence) ##we should double check this one because why is it at 100%-

###### Neumo 1 #########

match_tibble <- r4_tibble |>
  count(neumo1_match)

num_yes_match <- match_tibble |>
  filter(neumo1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(neumo1_should)

num_yes_should <- should_tibble |>
  filter(neumo1_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo1_percent_adherence = num_yes_match / num_yes_should
print(neumo1_percent_adherence)

###### Neumo 2 #########

match_tibble <- r4_tibble |>
  count(neumo2_match)

num_yes_match <- match_tibble |>
  filter(neumo2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(neumo2_should)

num_yes_should <- should_tibble |>
  filter(neumo2_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo2_percent_adherence = num_yes_match / num_yes_should
print(neumo2_percent_adherence)

###### Neumo 3 #########

match_tibble <- r4_tibble |>
  count(neumo3_match)

num_yes_match <- match_tibble |>
  filter(neumo3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(neumo3_should)

num_yes_should <- should_tibble |>
  filter(neumo3_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo3_percent_adherence = num_yes_match / num_yes_should
print(neumo3_percent_adherence)

###### Rota 1 #########

match_tibble <- r4_tibble |>
  count(rota1_match)

num_yes_match <- match_tibble |>
  filter(rota1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(rota1_should)

num_yes_should <- should_tibble |>
  filter(rota1_should == "YES") |>
  pull(n)
print(num_yes_should)

rota1_percent_adherence = num_yes_match / num_yes_should
print(rota1_percent_adherence)

###### Rota 2 #########

match_tibble <- r4_tibble |>
  count(rota2_match)

num_yes_match <- match_tibble |>
  filter(rota2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(rota2_should)

num_yes_should <- should_tibble |>
  filter(rota2_should == "YES") |>
  pull(n)
print(num_yes_should)

rota2_percent_adherence = num_yes_match / num_yes_should
print(rota2_percent_adherence)

###### SRP 1 #########

match_tibble <- r4_tibble |>
  count(srp1_match)

num_yes_match <- match_tibble |>
  filter(srp1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(srp1_should)

num_yes_should <- should_tibble |>
  filter(srp1_should == "YES") |>
  pull(n)
print(num_yes_should)

srp1_percent_adherence = num_yes_match / num_yes_should
print(srp1_percent_adherence)

###### SRP 2 #########

match_tibble <- r4_tibble |>
  count(srp2_match)

num_yes_match <- match_tibble |>
  filter(srp2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(srp2_should)

num_yes_should <- should_tibble |>
  filter(srp2_should == "YES") |>
  pull(n)
print(num_yes_should)

srp2_percent_adherence = num_yes_match / num_yes_should
print(srp2_percent_adherence)

###### Hep A #########

match_tibble <- r4_tibble |>
  count(hep_a_match)

num_yes_match <- match_tibble |>
  filter(hep_a_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(hep_a_should)

num_yes_should <- should_tibble |>
  filter(hep_a_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_a_percent_adherence = num_yes_match / num_yes_should
print(hep_a_percent_adherence)

###### DPT 1 #########

match_tibble <- r4_tibble |>
  count(dpt1_match)

num_yes_match <- match_tibble |>
  filter(dpt1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(dpt1_should)

num_yes_should <- should_tibble |>
  filter(dpt1_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt1_percent_adherence = num_yes_match / num_yes_should
print(dpt1_percent_adherence)

###### DPT 2 #########

match_tibble <- r4_tibble |>
  count(dpt2_match)

num_yes_match <- match_tibble |>
  filter(dpt2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(dpt2_should)

num_yes_should <- should_tibble |>
  filter(dpt2_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt2_percent_adherence = num_yes_match / num_yes_should
print(dpt2_percent_adherence)

###### VPH 1 #########

match_tibble <- r4_tibble |>
  count(vph_1_match)

num_yes_match <- match_tibble |>
  filter(vph_1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(vph_1_should)

num_yes_should <- should_tibble |>
  filter(vph_1_should == "YES") |>
  pull(n)
print(num_yes_should)

vph_1_percent_adherence = num_yes_match / num_yes_should
print(vph_1_percent_adherence)

###### Tetanus Diptheria #########

match_tibble <- r4_tibble |>
  count(tetanus_dip_match)

num_yes_match <- match_tibble |>
  filter(tetanus_dip_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r4_tibble |>
  count(tetanus_dip_should)

num_yes_should <- should_tibble |>
  filter(tetanus_dip_should == "YES") |>
  pull(n)
print(num_yes_should)

tetanus_dip_percent_adherence = num_yes_match / num_yes_should
print(tetanus_dip_percent_adherence)
```

```{r}
#| label: each-vax-adherence-calcs-for-region5

r5_tibble <- vax_rate_joins_island_region |>
  filter(island_region == 5)

###### Hep B ######
match_tibble <- r5_tibble |>
  count(hep_b_match)

num_yes_match <- match_tibble |>
  filter(hep_b_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(hep_b_should)

num_yes_should <- should_tibble |>
  filter(hep_b_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_b_percent_adherence = num_yes_match / num_yes_should
print(hep_b_percent_adherence)

######  BCG  #########

match_tibble <- r5_tibble |>
  count(bcg_match)

num_yes_match <- match_tibble |>
  filter(bcg_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(bcg_should)

num_yes_should <- should_tibble |>
  filter(bcg_should == "YES") |>
  pull(n)
print(num_yes_should)

bcg_percent_adherence = num_yes_match / num_yes_should
print(bcg_percent_adherence)

###### Polio VPI 1 #########

match_tibble <- r5_tibble |>
  count(polio_vpi1_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(polio_vpi1_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi1_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi1_percent_adherence)

###### Polio VPI 2 #########

match_tibble <- r5_tibble |>
  count(polio_vpi2_match)

num_yes_match <- match_tibble |>
  filter(polio_vpi2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(polio_vpi2_should)

num_yes_should <- should_tibble |>
  filter(polio_vpi2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vpi2_percent_adherence = num_yes_match / num_yes_should
print(polio_vpi2_percent_adherence)

###### Polio VOP 1 #########

match_tibble <- r5_tibble |>
  count(polio_vop1_match)

num_yes_match <- match_tibble |>
  filter(polio_vop1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(polio_vop1_should)

num_yes_should <- should_tibble |>
  filter(polio_vop1_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop1_percent_adherence = num_yes_match / num_yes_should
print(polio_vop1_percent_adherence)

###### Polio VOP 2 #########

match_tibble <- r5_tibble |>
  count(polio_vop2_match)

num_yes_match <- match_tibble |>
  filter(polio_vop2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(polio_vop2_should)

num_yes_should <- should_tibble |>
  filter(polio_vop2_should == "YES") |>
  pull(n)
print(num_yes_should)

polio_vop2_percent_adherence = num_yes_match / num_yes_should
print(polio_vop2_percent_adherence)
###### Penta 1 #########

match_tibble <- r5_tibble |>
  count(penta1_match)

num_yes_match <- match_tibble |>
  filter(penta1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(penta1_should)

num_yes_should <- should_tibble |>
  filter(penta1_should == "YES") |>
  pull(n)
print(num_yes_should)

penta1_percent_adherence = num_yes_match / num_yes_should
print(penta1_percent_adherence)

###### Penta 2 #########

match_tibble <- r5_tibble |>
  count(penta2_match)

num_yes_match <- match_tibble |>
  filter(penta2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(penta2_should)

num_yes_should <- should_tibble |>
  filter(penta2_should == "YES") |>
  pull(n)
print(num_yes_should)

penta2_percent_adherence = num_yes_match / num_yes_should
print(penta2_percent_adherence)

###### Penta 3 #########

match_tibble <- r5_tibble |>
  count(penta3_match)

num_yes_match <- match_tibble |>
  filter(penta3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(penta3_should)

num_yes_should <- should_tibble |>
  filter(penta3_should == "YES") |>
  pull(n)
print(num_yes_should)

penta3_percent_adherence = num_yes_match / num_yes_should
print(penta3_percent_adherence) ##we should double check this one because why is it at 100%-

###### Neumo 1 #########

match_tibble <- r5_tibble |>
  count(neumo1_match)

num_yes_match <- match_tibble |>
  filter(neumo1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(neumo1_should)

num_yes_should <- should_tibble |>
  filter(neumo1_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo1_percent_adherence = num_yes_match / num_yes_should
print(neumo1_percent_adherence)

###### Neumo 2 #########

match_tibble <- r5_tibble |>
  count(neumo2_match)

num_yes_match <- match_tibble |>
  filter(neumo2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(neumo2_should)

num_yes_should <- should_tibble |>
  filter(neumo2_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo2_percent_adherence = num_yes_match / num_yes_should
print(neumo2_percent_adherence)

###### Neumo 3 #########

match_tibble <- r5_tibble |>
  count(neumo3_match)

num_yes_match <- match_tibble |>
  filter(neumo3_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(neumo3_should)

num_yes_should <- should_tibble |>
  filter(neumo3_should == "YES") |>
  pull(n)
print(num_yes_should)

neumo3_percent_adherence = num_yes_match / num_yes_should
print(neumo3_percent_adherence)

###### Rota 1 #########

match_tibble <- r5_tibble |>
  count(rota1_match)

num_yes_match <- match_tibble |>
  filter(rota1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(rota1_should)

num_yes_should <- should_tibble |>
  filter(rota1_should == "YES") |>
  pull(n)
print(num_yes_should)

rota1_percent_adherence = num_yes_match / num_yes_should
print(rota1_percent_adherence)

###### Rota 2 #########

match_tibble <- r5_tibble |>
  count(rota2_match)

num_yes_match <- match_tibble |>
  filter(rota2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(rota2_should)

num_yes_should <- should_tibble |>
  filter(rota2_should == "YES") |>
  pull(n)
print(num_yes_should)

rota2_percent_adherence = num_yes_match / num_yes_should
print(rota2_percent_adherence)

###### SRP 1 #########

match_tibble <- r5_tibble |>
  count(srp1_match)

num_yes_match <- match_tibble |>
  filter(srp1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(srp1_should)

num_yes_should <- should_tibble |>
  filter(srp1_should == "YES") |>
  pull(n)
print(num_yes_should)

srp1_percent_adherence = num_yes_match / num_yes_should
print(srp1_percent_adherence)

###### SRP 2 #########

match_tibble <- r5_tibble |>
  count(srp2_match)

num_yes_match <- match_tibble |>
  filter(srp2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(srp2_should)

num_yes_should <- should_tibble |>
  filter(srp2_should == "YES") |>
  pull(n)
print(num_yes_should)

srp2_percent_adherence = num_yes_match / num_yes_should
print(srp2_percent_adherence)

###### Hep A #########

match_tibble <- r5_tibble |>
  count(hep_a_match)

num_yes_match <- match_tibble |>
  filter(hep_a_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(hep_a_should)

num_yes_should <- should_tibble |>
  filter(hep_a_should == "YES") |>
  pull(n)
print(num_yes_should)

hep_a_percent_adherence = num_yes_match / num_yes_should
print(hep_a_percent_adherence)

###### DPT 1 #########

match_tibble <- r5_tibble |>
  count(dpt1_match)

num_yes_match <- match_tibble |>
  filter(dpt1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(dpt1_should)

num_yes_should <- should_tibble |>
  filter(dpt1_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt1_percent_adherence = num_yes_match / num_yes_should
print(dpt1_percent_adherence)

###### DPT 2 #########

match_tibble <- r5_tibble |>
  count(dpt2_match)

num_yes_match <- match_tibble |>
  filter(dpt2_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(dpt2_should)

num_yes_should <- should_tibble |>
  filter(dpt2_should == "YES") |>
  pull(n)
print(num_yes_should)

dpt2_percent_adherence = num_yes_match / num_yes_should
print(dpt2_percent_adherence)

###### VPH 1 #########

match_tibble <- r5_tibble |>
  count(vph_1_match)

num_yes_match <- match_tibble |>
  filter(vph_1_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(vph_1_should)

num_yes_should <- should_tibble |>
  filter(vph_1_should == "YES") |>
  pull(n)
print(num_yes_should)

vph_1_percent_adherence = num_yes_match / num_yes_should
print(vph_1_percent_adherence)

###### Tetanus Diptheria #########

match_tibble <- r5_tibble |>
  count(tetanus_dip_match)

num_yes_match <- match_tibble |>
  filter(tetanus_dip_match == "YES") |>
  pull(n)
print(num_yes_match)

should_tibble <- r5_tibble |>
  count(tetanus_dip_should)

num_yes_should <- should_tibble |>
  filter(tetanus_dip_should == "YES") |>
  pull(n)
print(num_yes_should)

tetanus_dip_percent_adherence = num_yes_match / num_yes_should
print(tetanus_dip_percent_adherence)
```

